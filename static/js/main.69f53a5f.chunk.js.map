{"version":3,"sources":["TodoListItem.js","TodoList.js","TodoController.js","App.js","serviceWorker.js","index.js"],"names":["TodoListItem","props","el","updateTodo","index","listLength","useState","name","editTitle","setEditTitle","style","done","editMode","setEditMode","key","_id","type","checked","onChange","markTodo","value","e","target","onClick","deleteTodo","disabled","moveUp","moveDown","TodoList","todoList","list","map","length","TodoController","newTodo","setNewTodo","addNewTodo","App","setList","newTitle","a","axios","post","Math","random","then","response","console","log","catch","error","get","listFromServer","data","delete","patch","useEffect","newList","i","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.69f53a5f.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nfunction TodoListItem(props) {\n    const {el, updateTodo, index, listLength} = props\n    const [editTitle, setEditTitle] = useState(el.name)\n    const editButtonHandler = () => {\n        updateTodo(editTitle, el._id)\n        setEditMode(false)\n        setEditTitle(\"\");\n    }\n    const style = el.done === true ? {\"textDecoration\": \"line-through\"} : null;\n    const [editMode, setEditMode] = useState(false)\n    return (\n        <div>\n            <li  key = {el._id} style={style}>\n                <>\n                    <input type=\"checkbox\" checked={el.done} onChange={() => props.markTodo(el._id, el.done)}/>\n                    {el.name}\n                    {editMode ? <> <input type=\"text\" value={editTitle} onChange={(e) => setEditTitle(e.target.value)}/>\n                            <button onClick={editButtonHandler}> Save</button>\n                        </>\n                        :\n                        <>\n                            <button onClick={() => props.deleteTodo(el._id)}> delete</button>\n                            <button onClick={() => setEditMode(!editMode)}>Edit</button>\n                            <button disabled={!index} onClick={() => props.moveUp(props.index)}>↑</button>\n                            <button disabled={index===(listLength -1)}\n                                    onClick={() => props.moveDown(props.index)}>↓\n                            </button>\n\n                        </>}\n                </>\n\n            </li>\n        </div>\n    );\n}\n\nexport default TodoListItem;\n\n","import React from 'react';\nimport './App.css';\nimport TodoListItem from \"./TodoListItem\";\n\nfunction TodoList(props) {\n    const todoList = props.list;\n\n    return (\n        <div>\n            <center>\n\n                {todoList.map((el, index) =>\n                    <TodoListItem key={el._id}\n                                  el={el}\n                                  deleteTodo={props.deleteTodo}\n                                  updateTodo={props.updateTodo}\n                                  markTodo={props.markTodo}\n                                  index={index}\n                                  moveUp={props.moveUp}\n                                  moveDown={props.moveDown}\n                                  listLength = {todoList.length}\n                    />\n                )}\n\n            </center>\n        </div>\n    );\n}\n\nexport default TodoList;\n","import React, {useState} from 'react';\nimport './App.css';\n\nfunction TodoController(props) {\n    const [newTodo, setNewTodo] = useState(\"\")\n    const buttonHandler = () => {\n        props.addNewTodo(newTodo)\n        setNewTodo(\"\");\n    }\n    return (\n        <div>\n            <center>\n                {\"name of new Task\"}\n                <input value={newTodo} onChange={(e) => setNewTodo(e.target.value)}/>\n                <button onClick={buttonHandler}> addNewTodo</button>\n\n\n            </center>\n        </div>\n    );\n}\n\nexport default TodoController;\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport TodoList from \"./TodoList\";\nimport TodoController from \"./TodoController\";\nimport axios from 'axios';\n\nfunction App() {\n\n\n    const [list, setList] = useState([])\n\n\n    const addNewTodo = async (newTitle) => {\n        await axios.post('http://cryptic-shore-44131.herokuapp.com/todo', {\n            name: newTitle, done: true, _id: Math.random()\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        await axios.get('http://cryptic-shore-44131.herokuapp.com/todo')\n            .then(function (response) {\n                const listFromServer = response.data\n                // handle success\n                console.log(listFromServer);\n                setList(listFromServer)\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n\n        // const newTodo = {_id: Math.random(), name: newTitle, done: false}\n        // const newList = [...list, newTodo]\n        // setList(newList)\n    }\n    const deleteTodo = async (_id) => {\n        await axios.delete(`http://cryptic-shore-44131.herokuapp.com/todo/${_id}`, {})\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        await axios.get('http://cryptic-shore-44131.herokuapp.com/todo')\n            .then(function (response) {\n                const listFromServer = response.data\n                // handle success\n                console.log(listFromServer);\n                setList(listFromServer)\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n    }\n    const updateTodo = async (newTitle, _id) => {\n        await axios.patch(`http://cryptic-shore-44131.herokuapp.com/todo/${_id}`, {name:newTitle})\n            .then(function () {\n                         })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        await axios.get('http://cryptic-shore-44131.herokuapp.com/todo')\n            .then(function (response) {\n                const listFromServer = response.data\n                // handle success\n                console.log(listFromServer);\n                setList(listFromServer)\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n    }\n    const markTodo = async (_id, done) => {\n        await axios.patch(`http://cryptic-shore-44131.herokuapp.com/todo/${_id}`, {done: !done})\n            .then(function (response) {\n            })\n\n            .catch(function (error) {\n                console.log(error);\n            })\n        await axios.get('http://cryptic-shore-44131.herokuapp.com/todo')\n            .then(function (response) {\n                const listFromServer = response.data\n                // handle success\n                console.log(listFromServer);\n                setList(listFromServer)\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n    }\n    const moveUp = (index) => {\n        if (index === 0)\n            return\n        const newList = list.map((el, i) => {\n            if (index === i + 1) return list[index];\n            if (index === i) return list[index - 1];\n            return el\n            })\n        console.log(newList)\n        setList(newList)\n\n\n    }\n    const moveDown = (index) => {\n            const newList = list.map((el, i) => {\n            if (index === i) return list[index + 1];\n            if (index === i - 1) return list[index];\n            return el\n        })\n        setList(newList)\n\n    }\n    useEffect( ()=> {\n        axios.get('http://cryptic-shore-44131.herokuapp.com/todo')\n            .then(function (response) {\n                const listFromServer = response.data\n                // handle success\n                console.log(listFromServer);\n                setList(listFromServer)\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            });\n    }, [])\n    // axios.post('http://localhost:5000/todo', {\n    //     name: 'AxelP',\n    //     editMode: true\n    // })\n    //     .then(function (response) {\n    //         console.log(response);\n    //     })\n    //     .catch(function (error) {\n    //         console.log(error);\n    //     });\n    //id, title, done\n    return (\n        <div>\n            <TodoController addNewTodo={addNewTodo}/>\n            <TodoList list={list}\n                      deleteTodo={deleteTodo}\n                      updateTodo={updateTodo}\n                      markTodo={markTodo}\n                      moveUp={moveUp}\n                      moveDown={moveDown}\n\n            />\n\n\n        </div>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}